name: trigger-dca
# Trigger PR in DCA when a new tag gets pushed or when the develop branch gets updated
on:
  push:
    tags:
      - 'v[1-9][0-9].[0-9]+.[0-9]+'
    branches:
      - develop
      - main
  workflow_dispatch:  # Allow manually triggering the workflow
concurrency:
  # cancel the current running workflow from the same branch, PR when a new workflow is triggered 
  # when the trigger is not a PR but a push, it will use the commit sha to generate the concurrency group
  # {{ github.workflow }}: the workflow name is used to generate the concurrency group. This allows you to have more than one workflows
  # {{ github.ref_type }}: the type of Git ref object created in the repository. Can be either branch or tag 
  # {{ github.sha }}: full commit sha 
  # credit: https://github.com/Sage-Bionetworks-Workflows/sagetasks/blob/main/.github/workflows/ci.yml
  group: >-
    ${{ github.workflow }}-${{ github.ref_type }}-
    ${{ github.sha }}
  cancel-in-progress: true
jobs:
  trigger-frontend:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       Get release version
      #----------------------------------------------
      - name: Get pushed tag, if any
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
        run:  |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo ${{ env.RELEASE_VERSION }}
  
      #----------------------------------------------
      #       Open PRs in DCA
      #----------------------------------------------
      - name: Trigger DCA testing instance
        # run only when a release tag gets pushed or when the develop branch gets updated
        # if there's a push to the main branch (without tag), this part would not get triggered
        # if pushing to main and pushing tag to main both triggering this part, we would end up having the front-end dealing with the same PR
        if: ${{ env.RELEASE_VERSION != '' }} || github.ref_name == develop
        run: |
          curl -X POST \
          -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/Sage-Bionetworks/data_curator/dispatches \
          -d '{"event_type": "trigger-frontend", "client_payload": { "commit-sha": "'${{ github.sha }}'",  "release-version": "${{ env.RELEASE_VERSION }}"}'

