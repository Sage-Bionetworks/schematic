name: Publish to PyPI
on:
  push:
    tags:
      - '*'
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
  pypi_release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python     
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      #----------------------------------------------
      #          install & configure poetry         
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      #----------------------------------------------
      #       load cached venv if cache exists      
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist 
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
        
      #----------------------------------------------
      #    install your root project, if required 
      #----------------------------------------------      
      - name: Install library
        run: poetry install --no-interaction

      #----------------------------------------------
      #    get current pushed tag
      #----------------------------------------------      
      - name: Show GitHub ref
        run: echo "$GITHUB_REF"

      - name: Get current pushed tag
        run:  |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo ${{ env.RELEASE_VERSION }}
          
      #----------------------------------------------
      #    override version tag 
      #----------------------------------------------      
      - name: Override version tag
        run: poetry run python3 override_version.py
        shell: sh

      #----------------------------------------------
      #    publish to testpypi
      #----------------------------------------------      
      # - run: poetry config repositories.testpypi https://test.pypi.org/legacy/
      # - run: poetry config pypi-token.testpypi ${{ secrets.TWINE_TEST_TOKEN }}
      # - name: Publish package to test Pypi
      #   run: poetry publish -vvvv --build -r testpypi

      #----------------------------------------------
      #    check tag
      #----------------------------------------------      
      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo ::set-output name=match::true
          fi
      #----------------------------------------------
      #    publish to pypi
      #----------------------------------------------  
      - name: Publish package to Pypi
        if: steps.check-tag.outputs.match == 'true'
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          PYPI_USERNAME: __token__
        run: |
          poetry publish --build --username $PYPI_USERNAME --password $PYPI_TOKEN