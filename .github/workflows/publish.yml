name: Publish to PyPI
on:
  push:
    tags:
      - 'v[1-9][0-9].[0-9]+.[0-9]+'
    branches: [main]

jobs:
  pypi_release:
    runs-on: ubuntu-latest
    env:
      POETRY_VERSION:  1.3.0
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python     
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      #----------------------------------------------
      #          install & configure poetry
      #----------------------------------------------
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org \
            | python3 - --version ${{ env.POETRY_VERSION }};
          poetry config virtualenvs.create true;
          poetry config virtualenvs.in-project true;

      #----------------------------------------------
      #       load cached venv if cache exists      
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ matrix.python-version }}

      #----------------------------------------------
      # install dependencies and root project
      #----------------------------------------------
      - name: Install dependencies and root project
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --all-extras
        
      #----------------------------------------------
      #    get current pushed tag
      #----------------------------------------------      
      - name: Show GitHub ref
        run: echo "$GITHUB_REF"

      - name: Get current pushed tag
        run:  |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo ${{ env.RELEASE_VERSION }}
          
      #----------------------------------------------
      #    override version tag 
      #----------------------------------------------      
      - name: Override version tag
        run: poetry run python3 override_version.py
        shell: sh

      #----------------------------------------------
      #    publish to testpypi
      #----------------------------------------------      
      # - run: poetry config repositories.testpypi https://test.pypi.org/legacy/
      # - run: poetry config pypi-token.testpypi ${{ secrets.TWINE_TEST_TOKEN }}
      # - name: Publish package to test Pypi
      #   run: poetry publish -vvvv --build -r testpypi

      #----------------------------------------------
      #    check tag
      #----------------------------------------------      
      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo ::set-output name=match::true
          fi
      #----------------------------------------------
      #    publish to pypi
      #----------------------------------------------  
      - name: Publish package to Pypi
        id: publish-to-pypi
        if: steps.check-tag.outputs.match == 'true'
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          PYPI_USERNAME: __token__
        run: |
          poetry publish --build --username $PYPI_USERNAME --password $PYPI_TOKEN

      #----------------------------------------------
      #    post a message to slack
      #----------------------------------------------  

      - name: Post to a Slack channel
        if: steps.publish-to-pypi.outcome == 'success'
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
          # ibc-fair-data channel and data-curator-schematic channel
          channel-id: 'C050YD75QRL,C01ANC02U59'
          # For posting a simple plain text message
          slack-message: "Schematic has just been released. Check out new version: ${{ github.ref_name }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
